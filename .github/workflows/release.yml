name: Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - name: Get the script's version
        run: |
          sed -nr 's/^.*@version\s+([0-9]+\.[0-9]+)$/\1/p' src/atlast-okta.user.js > /tmp/version
          echo "SCRIPT_VERSION=`cat /tmp/version`" >> $GITHUB_ENV
      - name: Create distribution files
        run: |
          mkdir -p dist
          cp src/atlast-okta.user.js dist/atlast-okta.user.js
          awk '/==UserScript/, /\/UserScript/' src/atlast-okta.user.js > dist/atlast-okta.meta.js
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Release version ${{ env.SCRIPT_VERSION }}
          branch: release

#          # Optional. Tag name being created in the local repository and
#          # pushed to remote repository and defined branch.
#          tagging_message: 'v1.0.0'
#
#          # Optional. Option used by `git-status` to determine if the repository is
#          # dirty. See https://git-scm.com/docs/git-status#_options
#          status_options: '--untracked-files=no'
#
#          # Optional. Options used by `git-add`.
#          # See https://git-scm.com/docs/git-add#_options
#          add_options: '-u'
#
          # Optional. Options used by `git-push`.
          # See https://git-scm.com/docs/git-push#_options
          push_options: '--force'
#
#          # Optional. Disable dirty check and always try to create a commit and push
#          skip_dirty_check: true
#
#          # Optional. Skip internal call to `git fetch`
#          skip_fetch: true
#
#          # Optional. Skip internal call to `git checkout`
#          skip_checkout: true
#
#          # Optional. Prevents the shell from expanding filenames.
#          # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
#          disable_globbing: true

          # Optional. Create given branch name in local and remote repository.
          create_branch: true

#to get metadata for atlast-okta.meta.js
#        awk '/==UserScript/, /\/UserScript/' src/atlast-okta.user.js
#to get version number from the file
#        sed -nr 's/^.*@version\s+([0-9]+\.[0-9]+)$/\1/p' src/atlast-okta.user.js